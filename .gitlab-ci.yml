image:
  name: docker/compose:1.22.0
  entrypoint: ["/bin/sh", "-c"]

services:
  - docker:dind

variables:
  # When using dind service we need to instruct docker, to talk with the
  # daemon started inside of the service. The daemon is available with
  # a network connection instead of the default /var/run/docker.sock socket.
  #
  # The 'docker' hostname is the alias of the service container as described at
  # https://docs.gitlab.com/ee/ci/docker/using_docker_images.html#accessing-the-services
  #
  # Note that if you're using Kubernetes executor, the variable should be set to
  # tcp://localhost:2375 because of how Kubernetes executor connects services
  # to the job container
  DOCKER_HOST: "tcp://docker:2375"
  # improve performance for dind
  DOCKER_DRIVER: overlay2

before_script:
  - docker version
  - docker-compose version

stages:
  - test
  - deploy

Unit Tests:
  stage: test
  only:
    - /^(master|gitlab).*$/
  script:
    - docker-compose run --rm web python manage.py test lists

Func Tests:
  stage: test
  only:
    - /^(master|gitlab).*$/
  script:
    - docker-compose --project-name functests --file docker-compose.test.yml build
    - docker-compose --project-name functests --file docker-compose.test.yml run testweb

Deploy Staging:
  stage: deploy
  only:
    - /^(master|gitlab).*$/
  variables:
    HEROKU_APP_NAME: minimylist-staging
    HEROKU_LOGIN: _
  script:
    - docker-compose build
    - docker image ls

    - echo $HEROKU_API_KEY | docker login --username=_ --password-stdin registry.heroku.com
    - docker build -t registry.heroku.com/$HEROKU_APP_NAME/web .
    - docker push registry.heroku.com/$HEROKU_APP_NAME/web
    - docker run --rm -e HEROKU_API_KEY=$HEROKU_API_KEY wingrunr21/alpine-heroku-cli container:release web --app $HEROKU_APP_NAME
